{"ast":null,"code":"import _toConsumableArray from \"/Users/kellypauls/Desktop/deck-of-cards-exercise/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"/Users/kellypauls/Desktop/deck-of-cards-exercise/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kellypauls/Desktop/deck-of-cards-exercise/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/kellypauls/Desktop/deck-of-cards-exercise/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/kellypauls/Desktop/deck-of-cards-exercise/src/Deck.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nimport { Axios } from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar BASE_API_URL = 'https://deckofcardsapi.com/api/deck';\nfunction Deck() {\n  _s();\n  var _this = this;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    deck = _useState2[0],\n    setDeck = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    drawnCard = _useState4[0],\n    setDrawnCard = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isShuffling = _useState6[0],\n    setIsShuffling = _useState6[1];\n  useEffect(function loadDeck() {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var cardDeck;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Axios.get(\"\".concat(BASE_API_URL, \"/new/shuffle/\"));\n            case 2:\n              cardDeck = _context.sent;\n              setDeck(cardDeck.data);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n    fetchData();\n  }, []);\n  function draw() {\n    return _draw.apply(this, arguments);\n  }\n  function _draw() {\n    _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var drawRes, card;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return Axios.get(\"\".concat(BASE_API_URL, \"/\").concat(deck.deck_id, \"/draw/\"));\n          case 3:\n            drawRes = _context2.sent;\n            if (!(drawRes.data.remaining === 0)) {\n              _context2.next = 6;\n              break;\n            }\n            throw new Error(\"Deck empty!\");\n          case 6:\n            card = drawRes.data.cards[0];\n            setDrawnCard(function (cardDeck) {\n              return [].concat(_toConsumableArray(cardDeck), [{\n                id: card.code,\n                name: card.suit + \" \" + card.value,\n                image: card.image\n              }]);\n            });\n            _context2.next = 13;\n            break;\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n    return _draw.apply(this, arguments);\n  }\n  function shuffling() {\n    return _shuffling.apply(this, arguments);\n  }\n  function _shuffling() {\n    _shuffling = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            setIsShuffling(true);\n            _context3.prev = 1;\n            _context3.next = 4;\n            return Axios.get(\"\".concat(BASE_API_URL, \"/\").concat(deck.deck_id, \"/shuffle/\"));\n          case 4:\n            setDrawnCard([]);\n            _context3.next = 10;\n            break;\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            alert(_context3.t0);\n          case 10:\n            _context3.prev = 10;\n            setIsShuffling(false);\n            return _context3.finish(10);\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[1, 7, 10, 13]]);\n    }));\n    return _shuffling.apply(this, arguments);\n  }\n  function renderDrawBtn() {\n    if (!deck) return null;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Deck-draw\",\n      onClick: draw,\n      disabled: isShuffling,\n      children: \"Draw!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n  function renderShuffleBtn() {\n    if (!deck) return null;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Deck-shuffle\",\n      onClick: shuffling,\n      disabled: isShuffling,\n      children: \"Shuffle Deck!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"Deck\",\n    children: [renderDrawBtn(), renderShuffleBtn(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck-card-area\",\n      children: drawnCard.map(function (c) {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: c.name,\n          image: c.image\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Deck, \"uTVH+3tQIX+IdogfP0/3Bc0zXyQ=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["React","useEffect","useState","Card","Axios","jsxDEV","_jsxDEV","BASE_API_URL","Deck","_s","_this","_useState","_useState2","_slicedToArray","deck","setDeck","_useState3","_useState4","drawnCard","setDrawnCard","_useState5","_useState6","isShuffling","setIsShuffling","loadDeck","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cardDeck","wrap","_callee$","_context","prev","next","get","concat","sent","data","stop","draw","_draw","_callee2","drawRes","card","_callee2$","_context2","deck_id","remaining","Error","cards","_toConsumableArray","id","code","name","suit","value","image","t0","alert","shuffling","_shuffling","_callee3","_callee3$","_context3","finish","renderDrawBtn","className","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","renderShuffleBtn","map","c","_c","$RefreshReg$"],"sources":["/Users/kellypauls/Desktop/deck-of-cards-exercise/src/Deck.jsx"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\nimport Card from \"./Card\";\nimport { Axios } from \"axios\";\n\nconst BASE_API_URL = 'https://deckofcardsapi.com/api/deck'\n\nfunction Deck() {\n    const [deck, setDeck] = useState(null);\n    const [drawnCard, setDrawnCard] = useState([]);\n    const [isShuffling, setIsShuffling] = useState(false);\n\n    useEffect(function loadDeck() {\n        async function fetchData() {\n            const cardDeck = await Axios.get(`${BASE_API_URL}/new/shuffle/`);\n            setDeck(cardDeck.data)\n        }\n        fetchData();\n    }, []);\n\n    async function draw() {\n        try {\n            const drawRes = await Axios.get(`${BASE_API_URL}/${deck.deck_id}/draw/`);\n            if (drawRes.data.remaining === 0) throw new Error(\"Deck empty!\");\n            const card = drawRes.data.cards[0];\n            setDrawnCard(cardDeck => [\n                ...cardDeck,{\n                    id: card.code,\n                    name: card.suit + \" \" + card.value,\n                    image: card.image,\n                },\n            ]);\n        } catch (err) {\n            alert(err)\n        }\n    }\n\n    async function shuffling() {\n        setIsShuffling(true);\n        try {\n            await Axios.get(`${BASE_API_URL}/${deck.deck_id}/shuffle/`);\n            setDrawnCard([]);\n        } catch (err){\n            alert(err);\n        } finally {\n            setIsShuffling(false)\n        }\n    }\n    \n    function renderDrawBtn() {\n        if (!deck) return null;\n        return (\n            <button\n            className=\"Deck-draw\"\n            onClick={draw}\n            disabled={isShuffling}>\n                Draw!\n            </button>\n        )\n    }\n\n    function renderShuffleBtn() {\n        if (!deck) return null;\n        return (\n            <button\n            className=\"Deck-shuffle\"\n            onClick={shuffling}\n            disabled={isShuffling}>\n                Shuffle Deck!\n            </button>\n        )\n    }\n\n    return (\n        <main className=\"Deck\">\n            {renderDrawBtn()}\n            {renderShuffleBtn()}\n            <div className=\"deck-card-area\">\n                {drawnCard.map(c => (\n                    <Card key={c.id} name={c.name} image={c.image} />\n                ))}\n            </div>\n        </main>\n    )\n}\n\nexport default Deck;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}